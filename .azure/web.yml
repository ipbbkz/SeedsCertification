trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - СертификацияСемян/*

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - template: ./templates/web-template.yml
    parameters:
      queueName: Default
      coverageEnabled: false
      testsEnabled: false
      coverageDirectory: СертификацияСемян
      variables:
        SkipCodeSign: true
        BuildConfiguration: Release
        RestoreBuildProjects: "СертификацияСемян.sln"
        TestProjects: "СертификацияСемян.sln"

      afterRestore:
      - task: Npm@1
        displayName: 'npm ci СертификацияСемян'
        inputs:
          command: custom
          workingDir: СертификацияСемян
          verbose: false
          customCommand: 'ci'
      
      customBuild:
      - task: Npm@1
        displayName: 'npm run css СертификацияСемян'
        inputs:
          command: custom
          workingDir: СертификацияСемян
          verbose: false
          customCommand: 'run css'
      
      publishTasks:
      - powershell: |
          echo "##vso[task.setvariable variable=buildVersion]$(git rev-list --count HEAD)"
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          publishWebProjects: False
          projects: '**/СертификацияСемян.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --self-contained --runtime win-x64 /p:OpenApiGenerateDocumentsOnBuild=false --version-suffix $(buildVersion)'
          zipAfterPublish: True
        condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset')) 
      
      afterBuild:
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: 'СертификацияСемян.ИнтеграционныеТесты/bin/$(BuildConfiguration)/net7.0'
          ArtifactName: 'tests'
        condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset')) 
- stage: Deploy
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'))
  jobs:
  - deployment: DeployWeb
    pool:
      name: Default
      demands: 
      - agent.os -equals Windows_NT
    variables:
    - group: Staging
    - name: WebsiteName
      value: dreamstreem.online
    - template: ./templates/deploy-variables-template.yml
    - name: WebsitePhysicalPath
      value: 'D:\sites\kant\seedcert'
    - name: ArtifactName
      value: 'drop/СертификацияСемян.zip'
    environment: 'Staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ./templates/deploy-template.yml

          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk 7.0.404'
            inputs:
              packageType: sdk
              version: 7.0.404
          - task: DotNetCoreCLI@2
            displayName: Test
            enabled: false
            inputs:
              command: test
              arguments: 'СертификацияСемян.ИнтеграционныеТесты\bin\Release\net7.0\СертификацияСемян.ИнтеграционныеТесты.dll' 
