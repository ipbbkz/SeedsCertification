namespace СертификацияСемян;

using Microsoft.EntityFrameworkCore;
using СертификацияСемян.Данные;

public class УправляющийИнспекциями
{
    private readonly КонтекстБдПриложения контекст;

    public УправляющийИнспекциями(КонтекстБдПриложения контекст)
    {
        this.контекст = контекст;
    }

    public IList<Инспекция> ПолучитьИнспекцииЗаявки(int идЗаявки)
    {
        return контекст.Инспекции
            .Where(_ => _.ЗаявкаИд == идЗаявки)
            .OrderByDescending(з => з.ДатаСоздания).ToList();
    }

    public void ЗапланироватьИнспекцию(int идЗаявки, int типИнспекции, DateTime планируемаяДата, DateTime? фактическаяДата, string физиологическаяСтадия, string? общиеУсловнияПоля, string имяВедущегоИнспектора, string? имяВторогоИнспектора)
    {
        контекст.Инспекции.Add(new Инспекция()
        {
            ЗаявкаИд = идЗаявки,
            ТипИнспекции = типИнспекции,
            ПланируемаяДата = планируемаяДата,
            ФактическаяДата = фактическаяДата,
            ФизиологическаяСтадия = физиологическаяСтадия,
            ИмяВедущегоИнспектора = имяВедущегоИнспектора,
            ДругиеИнспектора = имяВторогоИнспектора ?? "",
            ОбщиеУсловияПоля = общиеУсловнияПоля ?? "",
            Статус = 1,
        });
        контекст.SaveChanges();
    }

    public Инспекция? ПолучитьИнспекцию(int идИнспекции)
    {
        return контекст.Инспекции
            .FirstOrDefault(_ => _.Ид == идИнспекции);
    }

    public List<ЗаписьИнспекции> ПолучитьПротокол(int идИнспекции)
    {
        return контекст.ЗаписиИнспекций
            .Where(зи => зи.ИнспекцияИд == идИнспекции)
            .ToList();
    }

    public void СохранитьПротокол(int идИнспекции, List<ЗаписьИнспекции> записи)
    {
        var существующиеЗаписи = ПолучитьПротокол(идИнспекции);
        foreach (var существующаяЗапись in существующиеЗаписи)
        {
            var з = записи.FirstOrDefault(з => з.НомерСерии == существующаяЗапись.НомерСерии);
            if (з is not null)
            {
                существующаяЗапись.КоличествоРастенийВСерии = з.КоличествоРастенийВСерии;
                существующаяЗапись.Карантин = з.Карантин;
                существующаяЗапись.ВиральныеБолезни = з.ВиральныеБолезни;
                существующаяЗапись.Черноножка = з.Черноножка;
                существующаяЗапись.Безтиповые = з.Безтиповые;
                существующаяЗапись.Ризоктония = з.Ризоктония;
            }
        }

        foreach (var запись in записи)
        {
            var сз = существующиеЗаписи.FirstOrDefault(з => з.НомерСерии == запись.НомерСерии);
            if (сз is null)
            {
                запись.ИнспекцияИд = идИнспекции;
                контекст.ЗаписиИнспекций.Add(запись);
            }
        }

        контекст.SaveChanges();
    }

    public void ПровестиИнспекцию(int идИнспекции)
    {
        контекст.Инспекции
            .Where(и => и.Ид == идИнспекции)
            .ExecuteUpdate(_ => _.SetProperty(и => и.Статус, 2));
    }

    public void ОдобритьИнспекцию(int идИнспекции)
    {
        контекст.Инспекции
            .Where(и => и.Ид == идИнспекции)
            .ExecuteUpdate(_ => _.SetProperty(и => и.Статус, 3));
    }

    public void ОтклонитьИнспекцию(int идИнспекции)
    {
        контекст.Инспекции
            .Where(и => и.Ид == идИнспекции)
            .ExecuteUpdate(_ => _.SetProperty(и => и.Статус, 4));
    }
}
