using Microsoft.EntityFrameworkCore;
using СертификацияСемян.Данные;

namespace СертификацияСемян;

public class УправляющийХозяйствами
{
    private readonly КонтекстБдПриложения контекст;

    public УправляющийХозяйствами(КонтекстБдПриложения контекст)
    {
        this.контекст = контекст;
    }

    public IList<ПроизводительСемян> ПолучитьХозяйстваПользователя(string идПользователя)
    {
        return контекст.ПроизводителиСемян.Where(_ => _.ИдВладельца == идПользователя && _.ДатаУдаления == null).ToList();
    }

    public IList<УчастокПоля> ПолучитьУчасткиПоля(int идПоля)
    {
        return контекст.УчасткиПолей.Where(_ => _.ИдПоля == идПоля && _.ДатаУдаления == null).ToList();
    }

    public IList<Поле> ПолучитьПоляХозяйства(int идХозяйства)
    {
        return контекст.Поля.Where(_ => _.ИдХозяйства == идХозяйства && _.ДатаУдаления == null).ToList();
    }

    public ПроизводительСемян? ПолучитьХозяйство(int идХозяйства)
    {
        return контекст.ПроизводителиСемян.FirstOrDefault(_ => _.Ид == идХозяйства && _.ДатаУдаления == null);
    }

    public void ДобавитьХозяйство(string идПользователя, string НаваниеКомпании, string Бин, string ЮридическийАдрес, string КонтактноеЛицо, string ЭлектроннаяПочтаКонтактногоЛица, string НомерТелефонаКонтактногоЛица)
    {
        контекст.ПроизводителиСемян.Add(new ПроизводительСемян()
        {
            ИдВладельца = идПользователя,
            НаваниеКомпании = НаваниеКомпании,
            БинИлиИин = Бин,
            ЮридическийАдрес = ЮридическийАдрес,
            КонтактноеЛицо = КонтактноеЛицо,
            ЭлектроннаяПочтаКонтактногоЛица = ЭлектроннаяПочтаКонтактногоЛица,
            НомерТелефонаКонтактногоЛица = НомерТелефонаКонтактногоЛица,
            Активно = true,
        });
        контекст.SaveChanges();
    }

    public void ИзменитьХозяйство(int идХозяйства, string идПользователя, string НаваниеКомпании, string Бин, string ЮридическийАдрес, string КонтактноеЛицо, string ЭлектроннаяПочтаКонтактногоЛица, string НомерТелефонаКонтактногоЛица)
    {
        var хозяйство = контекст.ПроизводителиСемян.FirstOrDefault(_ => _.Ид == идХозяйства && _.ДатаУдаления == null);
        if (хозяйство is null)
        {
            return;
        }

        хозяйство.ИдВладельца = идПользователя;
        хозяйство.НаваниеКомпании = НаваниеКомпании;
        хозяйство.БинИлиИин = Бин;
        хозяйство.ЮридическийАдрес = ЮридическийАдрес;
        хозяйство.КонтактноеЛицо = КонтактноеЛицо;
        хозяйство.ЭлектроннаяПочтаКонтактногоЛица = ЭлектроннаяПочтаКонтактногоЛица;
        хозяйство.НомерТелефонаКонтактногоЛица = НомерТелефонаКонтактногоЛица;
        //хозяйство.Активно = true;
        контекст.SaveChanges();
    }

    public void УдалитьХозяйство(int идХозяйства)
    {
        контекст.ПроизводителиСемян
            .Where(_ => _.Ид == идХозяйства)
            .ExecuteUpdate(_ => _.SetProperty(_ => _.ДатаУдаления, DateTime.UtcNow));
    }

    public void ДобавитьПоле(int идХозяйства, string название, string адрес, byte[] правоустанавливающиеДокументы)
    {
        контекст.Поля.Add(new Поле()
        {
            ИдХозяйства = идХозяйства,
            Название = название,
            АдресПоля = адрес,
            ПравоустанавливающиеДокументы = правоустанавливающиеДокументы,
        });
        контекст.SaveChanges();
    }

    public byte[] ПолучитьДокументыНаПоле(int идПоля)
    {
        return контекст.Поля.Where(_ => _.Ид == идПоля).Select(_ => _.ПравоустанавливающиеДокументы).First();
    }
}
