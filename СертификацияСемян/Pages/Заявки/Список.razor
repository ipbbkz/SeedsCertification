@page "/requests/"
@using System.Security.Claims;
@using СертификацияСемян.Данные;
@attribute [Authorize(Policy = "Фермеры")]
@inject УправляющийЗаявками управляющийЗаявками
<PageTitle>Заявки</PageTitle>

<h3>Заявки</h3>
@if (заявки.Count == 0)
{
    <p><a href="/requests/file">Создайте</a> новую заявку</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td>ТипЗаявки</td>
                <td>НаваниеСортаСемян</td>
                <td>Навание Компании</td>
                <td>КлассСемянИд</td>
                <td>Юридический Адрес</td>
                <td>ДатаСоздания</td>
                <td>Активно</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var з in заявки)
            {
                <tr>
                    <td>
                        @з.ТипЗаявки
                    </td>
                    <td>
                        @з.НаваниеСортаСемян
                    </td>
                    <td>
                        @з.УчастокПоля.Поле.ПроизводительСемян.НаваниеКомпании (@з.УчастокПоля.Поле.ПроизводительСемян.БинИлиИин)
                    </td>
                    <td>
                        @з.КлассСемянИд
                    </td>
                    <td>
                        @з.ДатаСоздания
                    </td>
                    <td>
                        @if (з.Активно)
                        {
                            <span class="oi oi-circle-check text-success"></span>
                        }
                        else
                        {
                            <span class="oi oi-circle-x text-danger"></span>
                        }
                    </td>
                </tr>
            }
        </tbody> 
    </table>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    private IList<Заявка> заявки = Array.Empty<Заявка>();

    protected override async Task OnParametersSetAsync()
    {
        var идЛичности = await состояниеАвторизации.ПолучитьИдентификаторБезопасности();
        if (идЛичности is not null)
        {
            заявки = управляющийЗаявками.ПолучитьЗаявкиПользователя(идЛичности);
        }

        await base.OnParametersSetAsync();
    }

}
