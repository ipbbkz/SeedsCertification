@page "/requests/{Ид:int}/inspections/new"
@attribute [Authorize(Policy = "Инспекторы")]
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject NavigationManager управляющийНавигацией
@inject IStringLocalizer<Инспекции> Лок

<h3>Запланировать Инспекцию</h3>

<EditForm Model="@Модель" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <ДанныеИнспекции Модель="@Модель" />

    <button type="submit" class="btn btn-primary">@Глобальные.Сохранить</button>
    <a href="/requests/@Ид/inspections/" class="btn btn-secondary">@Глобальные.Назад</a>
</EditForm>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    [Parameter]
    public int Ид { get; set; }

    public МодельИнспекции? Модель { get; set; } = new();

    private async Task Submit()
    {
        var идЛичности = await состояниеАвторизации.ПолучитьИдентификаторБезопасности();
        if (идЛичности is null)
        {
            return;
        }

        управляющийИнспекциями.ЗапланироватьИнспекцию(
            Ид,
            Модель!.ТипИнспекции!.Value,
            Модель!.ПланируемаяДата!.Value,
            Модель.ФактическаяДата,
            Модель.ФизиологическаяСтадия,
            Модель.ОбщееСостояниеПоля   ,
            Модель.ИмяВедущегоИнспектора,
            Модель.ИмяВторогоИнспектора);
        управляющийНавигацией.NavigateTo($"/requests/{Ид}/inspections/");
    }
}
