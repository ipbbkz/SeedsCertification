@page "/requests/{Ид:int}/inspections"
@attribute [Authorize(Policy = "Инспекторы")]
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject IStringLocalizer<Инспекции> Лок

<PageTitle>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</PageTitle>

<h3>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</h3>
<h4>
    @Лок["ДанныеЗаявки"]
</h4>
<fieldset disabled>
    <БазовыеДанныеЗаявки Модель=@Модель Пользователь=@ИдВладельца />
</fieldset>

<h4>
    @Лок["Инспекции"]
</h4>
<a href="/requests/@Ид/inspections/new" class="btn btn-primary">@Лок["Запланировать"]</a>
<table class="table">
    <thead>
        <tr>
            <th>@Лок["ТипИнспекции"]</th>
            <th>@Лок["ПланируемаяДата"]</th>
            <th>@Лок["ФактическаяДата"]</th>
            <th>@Лок["СредняяФизиологическаяСтадия"]</th>
            <th>@Лок["ИмяВедущегоИнспектора"]</th>
            <th>@Лок["Статус"]</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var инспекция in ИнспекцииЗаявки)
        {
            <tr>
                <td><ТипИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td>@инспекция.ПланируемаяДата.ToShortDateString()</td>
                <td>@инспекция.ФактическаяДата?.ToShortDateString()</td>
                <td>@инспекция.ФизиологическаяСтадия</td>
                <td>@инспекция.ИмяВедущегоИнспектора</td>
                <td>
                    <СтатусИнспекции Значение="инспекция.Статус" />
                </td>
                <td>
                    <a href="/requests/@Ид/inspections/@инспекция.Ид/protocols">@Лок["Протокол"]</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<a href="/requests/1" class="btn btn-secondary">@Глобальные.Назад</a>

@code {
    [Parameter]
    public int Ид { get; set; }

    public МодельЗаявки Модель { get; set; } = new();
    public string ИдВладельца { get; set; } = "";
    public IList<Инспекция> ИнспекцииЗаявки { get; set; } = Array.Empty<Инспекция>();

    protected override async Task OnParametersSetAsync()
    {
        var з = управляющийЗаявками.ПолучитьЗаявку(Ид);
        ИдВладельца = з.УчастокПоля.Поле.ПроизводительСемян.ИдВладельца;

        Проектор.ОтобразитьЗаявку(з, Модель);

        ИнспекцииЗаявки = управляющийИнспекциями.ПолучитьИнспекцииЗаявки(Ид);
        await base.OnParametersSetAsync();
    }
}
