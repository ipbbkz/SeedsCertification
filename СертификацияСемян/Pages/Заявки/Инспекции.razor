@page "/requests/{Ид:int}/inspections"
@attribute [Authorize(Policy = "Инспекторы")]
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject IStringLocalizer<Инспекции> Лок
@inject IStringLocalizer<Глобальные> ГлобЛок

<PageTitle>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</PageTitle>

<h3>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</h3>
<h4>
    @Лок["ДанныеЗаявки"]
</h4>
<fieldset disabled>
    <БазовыеДанныеЗаявки Модель=@Модель Пользователь=@ИдВладельца />
</fieldset>

<h4>
    @Лок["Инспекции"]
</h4>
<a href="/requests/@Ид/inspections/new" class="btn btn-primary">Запланировать</a>
<table class="table">
    <thead>
        <tr>
            <th>@Лок["ТипИнспекции"]</th>
            <th>@Лок["ПланируемаяДата"]</th>
            <th>@Лок["ФактическаяДата"]</th>
            <th>@Лок["СредняяФизиологическаяСтадия"]</th>
            <th>@Лок["ИмяВедущегоИнспектора"]</th>
            <th>@Лок["Статус"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var инспекция in ИнспекцииЗаявки)
        {
            <tr>
                <td>@инспекция.ТипИнспекции</td>
                <td>@инспекция.ПланируемаяДата</td>
                <td>@инспекция.ФактическаяДата</td>
                <td>@инспекция.ФизиологическаяСтадия</td>
                <td>@инспекция.ИмяВедущегоИнспектора</td>
                <td>
                    @инспекция.Статус
                </td>
            </tr>
        }
    </tbody>
</table>

<a href="/requests/1" class="btn btn-secondary">@ГлобЛок["Назад"]</a>

@code {
    [Parameter]
    public int Ид { get; set; }

    public МодельЗаявки Модель { get; set; } = new();
    public string ИдВладельца { get; set; } = "";
    public IList<Инспекция> ИнспекцииЗаявки { get; set; } = Array.Empty<Инспекция>();

    protected override async Task OnParametersSetAsync()
    {
        var з = управляющийЗаявками.ПолучитьЗаявку(Ид);
        ИдВладельца = з.УчастокПоля.Поле.ПроизводительСемян.ИдВладельца;

        Модель.Код = з.Код;
        Модель.ТипЗаявки = з.ТипЗаявки;
        Модель.НазваниеСортаСемян = з.НаваниеСортаСемян;
        Модель.КлассСемянИд = з.КлассСемянИд;

        Модель.ИдХозяйства = з.УчастокПоля.Поле.ИдХозяйства;
        Модель.ИдПоля = з.УчастокПоля.ИдПоля;
        Модель.ИдУчастка = з.ИдУчастка;

        Модель.РазмерКлубня = з.РазмерКлубня;
        Модель.КоординатыУчастка = з.КоординатыУчастка;
        Модель.СевооборотПрошлогоГода = з.СевооборотПрошлогоГода;
        Модель.Севооборот2ГодаНазад = з.Севооборот2ГодаНазад;
        Модель.Севооборот3ГодаНазад = з.Севооборот3ГодаНазад;
        Модель.ИзоляцияПолей = з.ИзоляцияПолей;
        Модель.СвидетельствоПроисхожденияСемян = з.СвидетельствоПроисхожденияСемян;
        Модель.ЗаключениеОНематодах = з.ЗаключениеОНематодах;

        Модель.Протравители = з.Протравители;
        Модель.Инсектициды = з.Инсектициды;
        Модель.Фунгициды = з.Фунгициды;
        Модель.Удобрения = з.Удобрения;
        Модель.Гербициды = з.Гербициды;

        Модель.ФормаУчастка = з.ФормаУчастка;
        Модель.Размер1 = з.Размер1;
        Модель.Размер2 = з.Размер2;
        Модель.ПлощадьПосадки = з.ПлощадьПосадки;
        Модель.РасстояниеМеждуРядами = з.РасстояниеМеждуРядами;
        Модель.РасстояниеВРяду = з.РасстояниеВРяду;

        Модель.ПрогнозируемоеКоличествоУрожая = з.ПрогнозируемоеКоличествоУрожая;
        Модель.ДатаПосадки = з.ДатаПосадки;
        Модель.ДатаСбора = з.ДатаСбора;

        ИнспекцииЗаявки = управляющийИнспекциями.ПолучитьИнспекцииЗаявки(Ид);
        await base.OnParametersSetAsync();
    }
}
