@page "/farms/{Ид:int}/fields"
@using System.Security.Claims;
@using СертификацияСемян.Данные;
@attribute [Authorize(Policy = "Фермеры")]
@inject УправляющийХозяйствами управляющийХозяйствами

<PageTitle>Поля</PageTitle>
<h3>Поля</h3>
@if (участки.Count == 0)
{
    <p><a href="/farms/@Ид/fields/add">Создайте</a> поле</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td>Название</td>
                <td>Адрес</td>
                <td>Документы</td>
                <td> </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var ф in участки)
            {
                <tr>
                    <td>
                        @ф.Название
                    </td>
                    <td>
                        @ф.АдресПоля
                    </td>
                    <td>
                        <a href="/farms/@Ид/fields/@ф.Ид/documents" target="_blank">Просмотр</a>
                    </td>
                    <td>
                        <div class="btn-group">
                            <a href="/farms/@Ид/fields/@ф.Ид/edit" class="btn btn-primary">Изменить</a>
                            <a href="/farms/@Ид/fields/@ф.Ид/delete" class="btn btn-danger"><span class="oi oi-trash"></span></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int Ид { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    private IList<Поле> участки = Array.Empty<Поле>();

    protected override async Task OnParametersSetAsync()
    {
        var идЛичности = await состояниеАвторизации.ПолучитьИдентификаторБезопасности();
        if (идЛичности is not null)
        {
            участки = управляющийХозяйствами.ПолучитьПоляХозяйства(Ид);
        }

        await base.OnParametersSetAsync();
    }
}
