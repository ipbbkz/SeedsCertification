@page "/my/requests/{ИдЗаявки:int}/inspections/{ИдИнспекции:int}/protocols/lot"
@attribute [Authorize(Policy = "Фермеры")]
@using Страницы.Заявки
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject NavigationManager управляющийНавигацией
@inject IStringLocalizer<Инспекции> Лок

<h3>@string.Format(Лок["ПротоколИнспекции"], ИдИнспекции)</h3>

<h4>
    @Лок["ДанныеЗаявки"]
</h4>
<fieldset disabled>
    <БазовыеДанныеЗаявки Модель=@МодельЗаявки Пользователь=@ИдВладельца />
</fieldset>

<h4>
    @Лок["ДанныеИнспекции"]
</h4>
<fieldset disabled>
    <ДанныеИнспекции Модель="@Модель" />
</fieldset>
<h4>
    @Лок["ЗаписиПротокола"]
</h4>
<div class="row">
    <div class="col-5">
        <table class="table">
            <tbody>
                <tr>
                    <th>@Лок["ВесПартии"]</th>
                    <td>
                        @Запись.ВесПартии
                    </td>
                    <td>
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ИнспектируемыйВес"]</th>
                    <td>
                        @Запись.ИнспектируемыйВес
                    </td>
                    <td>
                    </td>
                </tr>
                <tr>
                    <th>@Лок["СухаяГниль"]</th>
                    <td>
                        @Запись.СухаяГниль
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.СухаяГниль))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["МокраяГниль"]</th>
                    <td>
                        @Запись.МокраяГниль
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.МокраяГниль))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Фитофтороз"]</th>
                    <td>
                        @Запись.Фитофтороз
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Фитофтороз))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПаршаОбыкновенная"]</th>
                    <td>
                        @Запись.ПаршаОбыкновенная
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПаршаОбыкновенная))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПаршаЛуговая"]</th>
                    <td>
                        @Запись.ПаршаЛуговая
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПаршаЛуговая))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПаршаСеребристая"]</th>
                    <td>
                        @Запись.ПаршаСеребристая
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПаршаСеребристая))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПаршаПорошистая"]</th>
                    <td>
                        @Запись.ПаршаПорошистая
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПаршаПорошистая))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Ризоктониоз"]</th>
                    <td>
                        @Запись.Ризоктониоз
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Ризоктониоз))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Продавленность"]</th>
                    <td>
                        @Запись.Продавленность
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Продавленность))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["НезначительныеПовреждения"]</th>
                    <td>
                        @Запись.НезначительныеПовреждения
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.НезначительныеПовреждения))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ВнешниеДефекты"]</th>
                    <td>
                        @Запись.ВнешниеДефекты
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ВнешниеДефекты))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПрилипшаяПочва"]</th>
                    <td>
                        @Запись.ПрилипшаяПочва
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПрилипшаяПочва))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ПревышениеРазмеров"]</th>
                    <td>
                        @Запись.ПревышениеРазмеров
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ПревышениеРазмеров))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Проростания"]</th>
                    <td>
                        @Запись.Проростания
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Проростания))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ВнутренниеДефекты"]</th>
                    <td>
                        @Запись.ВнутренниеДефекты
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ВнутренниеДефекты))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["РаздавленныеКлубни"]</th>
                    <td>
                        @Запись.РаздавленныеКлубни
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.РаздавленныеКлубни))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["ВирусныйНекроз"]</th>
                    <td>
                        @Запись.ВирусныйНекроз
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.ВирусныйНекроз))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Переохлаждение"]</th>
                    <td>
                        @Запись.Переохлаждение
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Переохлаждение))
                    </td>
                </tr>
                <tr>
                    <th>@Лок["Вредители"]</th>
                    <td>
                        @Запись.Вредители
                    </td>
                    <td>
                        @ОтображениеЗаписи((Запись, Запись.Вредители))
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <label>Рекомендованный класс семян:</label> <КлассСемян Значение=@((int)ПравилаСертификации.РекомендованныйКлассСемян(Запись)) />
    </div>
</div>

<div class="row my-3">
    <div class="col">
        @if (Модель.Статус == 2)
        {
            <a class="btn btn-primary" @onclick="Одобрить">@Глобальные.Одобрить</a>
            <a class="btn btn-danger" @onclick="Отклонить">@Глобальные.Отклонить</a>
        }
        <a href="/my/requests/@ИдЗаявки/inspections" class="btn btn-secondary">@Глобальные.Назад</a>
    </div>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    [Parameter]
    public int ИдЗаявки { get; set; }

    [Parameter]
    public int ИдИнспекции { get; set; }

    public string ИдВладельца { get; set; } = "";

    public МодельЗаявки МодельЗаявки { get; set; } = new();

    public МодельИнспекции Модель { get; set; } = new();

    public ЗаписьИнспекцииПартии Запись { get; set; } = new();

    RenderFragment<(ЗаписьИнспекцииПартии запись, int? значение)> ОтображениеЗаписи = (значение) => __builder =>
    {
        if (значение.значение is null)
        {
            <text></text>
        }
        else
        {
            <text>
                @значение.значение <text>(</text>@(((100.0 * (значение.значение ?? 0)) / (значение.запись.ИнспектируемыйВес)).ToString("F1"))<text>%)</text>
            </text>
        }
    };


    protected override void OnParametersSet()
    {
        var заявка = управляющийЗаявками.ПолучитьЗаявку(ИдЗаявки);
        if (заявка is null)
        {
            return;
        }

        ИдВладельца = заявка.УчастокПоля.Поле.ПроизводительСемян.ИдВладельца;

        Проектор.ОтобразитьЗаявку(заявка, МодельЗаявки);

        var инспекция = управляющийИнспекциями.ПолучитьИнспекцию(ИдИнспекции);
        if (инспекция is null)
        {
            return;
        }

        Проектор.ОтобразитьИнспекцию(инспекция, Модель);
        Запись = управляющийИнспекциями.ПолучитьПротоколИнспекцииПартии(ИдИнспекции);
        base.OnParametersSet();
    }

    public void Одобрить()
    {
        управляющийИнспекциями.ОдобритьИнспекцию(ИдИнспекции);
        управляющийНавигацией.NavigateTo($"/my/requests/{ИдЗаявки}/inspections");
    }

    public void Отклонить()
    {
        управляющийИнспекциями.ОтклонитьИнспекцию(ИдИнспекции);
        управляющийНавигацией.NavigateTo($"/my/requests/{ИдЗаявки}/inspections");
    }
}
