@page "/requests/{ИдЗаявки:int}/inspections/{ИдИнспекции:int}/protocols/field"
@attribute [Authorize(Policy = "Инспекторы")]
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject NavigationManager управляющийНавигацией
@inject IStringLocalizer<Инспекции> Лок

<h3>@string.Format(Лок["ПротоколИнспекции"], ИдИнспекции)</h3>

<h4>
    @Лок["ДанныеЗаявки"]
</h4>
<fieldset disabled>
    <БазовыеДанныеЗаявки Модель=@МодельЗаявки Пользователь=@ИдВладельца />
</fieldset>

<h4>
    @Лок["ДанныеИнспекции"]
</h4>
<fieldset disabled>
    <ДанныеИнспекции Модель="@Модель" />
</fieldset>
<h4>
    @Лок["ЗаписиПротокола"]
</h4>
<table class="table">
    <thead>
        <tr>
            <th colspan="2"></th>
            <th colspan="4" class="text-center">@Лок["ДефектыКонтроля"]</th>
            <th class="text-center">@Лок["ДругиеНаблюдения"]</th>
            <th></th>
        </tr>
        <tr>
            <th>@Лок["НомерСерии"]</th>
            <th>@Лок["КоличествоРастенийВСерии"]</th>
            <th>@Лок["Карантин"]</th>
            <th>@Лок["ВиральныеБолезни"]</th>
            <th>@Лок["Черноножка"]</th>
            <th>@Лок["Безтиповые"]</th>
            <th>@Лок["Ризоктония"]</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var записьИнспекция in Записи)
        {
            <tr>
                <td>@записьИнспекция.НомерСерии</td>
                <td>
                    <InputNumber @bind-Value:get="записьИнспекция.КоличествоРастенийВСерии" @bind-Value:set=@((value) => записьИнспекция.КоличествоРастенийВСерии = value) class="form-control" disabled="@(Модель.Статус != 1)" min=1 />
                </td>
                <td>
                    <InputNumber @bind-Value:get="записьИнспекция.Карантин" @bind-Value:set=@((value) => записьИнспекция.Карантин = value) class="form-control" disabled="@(Модель.Статус != 1)" />
                </td>
                <td>
                    <InputNumber @bind-Value="записьИнспекция.ВиральныеБолезни" class="form-control" disabled="@(Модель.Статус != 1)" />
                </td>
                <td>
                    <InputNumber @bind-Value="записьИнспекция.Черноножка" class="form-control" disabled="@(Модель.Статус != 1)" />
                </td>
                <td>
                    <InputNumber @bind-Value="записьИнспекция.Безтиповые" class="form-control" disabled="@(Модель.Статус != 1)" />
                </td>
                <td>
                    <InputNumber @bind-Value="записьИнспекция.Ризоктония" class="form-control" disabled="@(Модель.Статус != 1)" />
                </td>
                <th>
                    
                </th>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th></th>
            <th>
                @ОбщаяЗаписьИнспекция.КоличествоРастенийВСерии
            </th>
            <th>
                @ОтображениеЗаписи((ОбщаяЗаписьИнспекция, ОбщаяЗаписьИнспекция.Карантин))
            </th>
            <th>
                @ОтображениеЗаписи((ОбщаяЗаписьИнспекция, ОбщаяЗаписьИнспекция.ВиральныеБолезни))
            </th>
            <th>
                @ОтображениеЗаписи((ОбщаяЗаписьИнспекция, ОбщаяЗаписьИнспекция.Черноножка))
            </th>
            <th>
                @ОтображениеЗаписи((ОбщаяЗаписьИнспекция, ОбщаяЗаписьИнспекция.Безтиповые))
            </th>
            <td>
                @ОтображениеЗаписи((ОбщаяЗаписьИнспекция, ОбщаяЗаписьИнспекция.Ризоктония))
            </td>
            <th>
                    
            </th>
        </tr>
    </tfoot>
</table>

<div class="row my-3">
    <div class="col">
        <label>Рекомендованный класс семян:</label> <КлассСемян Значение=@((int)ПравилаСертификации.РекомендованныйКлассСемян(Записи)) />
    </div>
</div>

@if (Модель.Статус == 1)
{
    <div class="row my-3">
        <div class="col">
            <a class="btn btn-primary" @onclick="ДобавитьЗапись">Добавить</a>
        </div>
    </div>    
}

<div class="row my-3">
    <div class="col">
        @if (Модель.Статус == 1)
        {
            <a class="btn btn-primary" @onclick="СохранитьПротокол">@Глобальные.Сохранить</a>
            <a class="btn btn-secondary" @onclick="(() => ПоказыватьОкноОтправкиЗаявки = true)">@Лок["Отправить"]</a>
        }
        <a href="/requests/@ИдЗаявки/inspections" class="btn btn-secondary">@Глобальные.Назад</a>
    </div>
</div>

@if (ПоказыватьОкноОтправкиЗаявки)
{
    <div class="modal show" tabindex="-1" style="display: block">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Завершение протокола</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="@(() => ПоказыватьОкноОтправкиЗаявки = false)"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <label class="form-label">
                                @Лок["ФактическаяДата"]
                            </label>
                            <InputDate @bind-Value="ФактическаяДата" class="form-control" Type="InputDateType.Date" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="@(() => ПоказыватьОкноОтправкиЗаявки = false)">Закрыть</button>
                    <button type="button" class="btn btn-primary" @onclick="ОтправитьНаОдобрение">@Лок["Отправить"]</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    [Parameter]
    public int ИдЗаявки { get; set; }

    [Parameter]
    public int ИдИнспекции { get; set; }

    public string ИдВладельца { get; set; } = "";

    public МодельЗаявки МодельЗаявки { get; set; } = new();

    public МодельИнспекции Модель { get; set; } = new();

    public List<ЗаписьПолевойИнспекции> Записи { get; set; } = new();

    public bool ПоказыватьОкноОтправкиЗаявки = false;

    public DateTime ФактическаяДата { get; set; }

    public ЗаписьПолевойИнспекции ОбщаяЗаписьИнспекция
    { 
        get
        {
            var результат = new ЗаписьПолевойИнспекции();
            foreach (var записьИнспекция in Записи)
            {
                результат.КоличествоРастенийВСерии += записьИнспекция.КоличествоРастенийВСерии;
                результат.Карантин = Объединить(результат.Карантин, записьИнспекция.Карантин);
                результат.ВиральныеБолезни = Объединить(результат.ВиральныеБолезни, записьИнспекция.ВиральныеБолезни);
                результат.Черноножка = Объединить(результат.Черноножка, записьИнспекция.Черноножка);
                результат.Безтиповые = Объединить(результат.Безтиповые, записьИнспекция.Безтиповые);
                результат.Ризоктония = Объединить(результат.Ризоктония, записьИнспекция.Ризоктония);
            }

            return результат;

            int? Объединить(int? v1, int? v2)
            {
                return v1 is null && v2 is null ? null : (v1 ?? 0) + (v2 ?? 0);
            }
        }
    }

    RenderFragment<(ЗаписьПолевойИнспекции запись, int? значение)> ОтображениеЗаписи = (значение) => __builder =>
    {
        if (значение.значение is null)
        {
            <text></text>
        }
        else
        {
            <text>
                @значение.значение <text>(</text>@(((100.0 * (значение.значение ?? 0)) / (значение.запись.КоличествоРастенийВСерии)).ToString("F1"))<text>%)</text>
            </text>
        }
    };


    protected override void OnParametersSet()
    {
        var заявка = управляющийЗаявками.ПолучитьЗаявку(ИдЗаявки);
        if (заявка is null)
        {
            return;
        }

        ИдВладельца = заявка.УчастокПоля.Поле.ПроизводительСемян.ИдВладельца;

        Проектор.ОтобразитьЗаявку(заявка, МодельЗаявки);

        var инспекция = управляющийИнспекциями.ПолучитьИнспекцию(ИдИнспекции);
        if (инспекция is null)
        {
            return;
        }

        Проектор.ОтобразитьИнспекцию(инспекция, Модель);
        ФактическаяДата = инспекция.ФактическаяДата ?? инспекция.ПланируемаяДата;
        Записи = управляющийИнспекциями.ПолучитьПротоколПолевойИнспекции(ИдИнспекции);
        base.OnParametersSet();
    }

    public void ДобавитьЗапись()
    {
        var записьИнструкции = new ЗаписьПолевойИнспекции()
        { 
            НомерСерии = Записи.Count + 1,
            КоличествоРастенийВСерии = 100,
        };
        Записи.Add(записьИнструкции);
    }

    public void СохранитьПротокол()
    {
        управляющийИнспекциями.СохранитьПротоколПолевойИнспекции(ИдИнспекции, Записи);
    }

    void ОтправитьНаОдобрение()
    {
        управляющийИнспекциями.ПровестиИнспекцию(ИдИнспекции, ФактическаяДата);
        управляющийНавигацией.NavigateTo($"/requests/{ИдЗаявки}/inspections");
    }
}
