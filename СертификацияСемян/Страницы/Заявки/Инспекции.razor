@page "/requests/{Ид:int}/inspections"
@attribute [Authorize(Policy = "Инспекторы")]
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject NavigationManager управляющийНавигацией
@inject IStringLocalizer<Инспекции> Лок

<PageTitle>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</PageTitle>

<h3>@string.Format(Лок["ИнспекцииЗаявки"], Модель.Код)</h3>
<h4>
    @Лок["ДанныеЗаявки"]
</h4>
<fieldset disabled>
    <БазовыеДанныеЗаявки Модель=@Модель Пользователь=@ИдВладельца />
</fieldset>

<h4>
    @Лок["Инспекции"]
</h4>
@if (Модель.Статус <= 1)
{
    <a href="/requests/@Ид/inspections/new" class="btn btn-primary">@Лок["Запланировать"]</a>
}
<table class="table">
    <thead>
        <tr>
            <th>@Лок["ТипИнспекции"]</th>
            <th>@Лок["ПланируемаяДата"]</th>
            <th>@Лок["ФактическаяДата"]</th>
            <th>@Лок["СредняяФизиологическаяСтадия"]</th>
            <th>@Лок["ИмяВедущегоИнспектора"]</th>
            <th>@Лок["Статус"]</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var инспекция in ИнспекцииЗаявки)
        {
            <tr>
                <td><ТипИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td>@инспекция.ПланируемаяДата.ToShortDateString()</td>
                <td>@инспекция.ФактическаяДата?.ToShortDateString()</td>
                <td>@инспекция.ФизиологическаяСтадия</td>
                <td>@инспекция.ИмяВедущегоИнспектора</td>
                <td>
                    <СтатусИнспекции Значение="инспекция.Статус" />
                </td>
                <td>
                    @if (инспекция.ТипИнспекции == 1)
                    {
                        <a href="/requests/@Ид/inspections/@инспекция.Ид/protocols/field">@Лок["Протокол"]</a>
                    }
                    @if (инспекция.ТипИнспекции == 2)
                    {
                        <a href="/requests/@Ид/inspections/@инспекция.Ид/protocols/lot">@Лок["Протокол"]</a>
                    }
                    @if (инспекция.ТипИнспекции == 3)
                    {
                        <a href="/requests/@Ид/inspections/@инспекция.Ид/protocols/postharvest">@Лок["Протокол"]</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (МожноОтправитьНаСертификацию)
{
    <button class="btn btn-secondary" @onclick=ОтправитьНаСертификацию>@Лок["ОтправитьНаСертификацию"]</button>
}

<a href="/requests/1" class="btn btn-secondary">@Глобальные.Назад</a>

@code {
    [Parameter]
    public int Ид { get; set; }

    public МодельЗаявки Модель { get; set; } = new();
    public string ИдВладельца { get; set; } = "";
    public IList<Инспекция> ИнспекцииЗаявки { get; set; } = Array.Empty<Инспекция>();

    public bool МожноОтправитьНаСертификацию
    {
        get
        {
            var естьПолеваяИнспекция = ИнспекцииЗаявки.Count(_ => _.ТипИнспекции == 1) > 0;
            var естьИнспекцияПартии = ИнспекцииЗаявки.Count(_ => _.ТипИнспекции == 2) > 0;
            var естьПослеуборочнаяИнспекция = ИнспекцииЗаявки.Count(_ => _.ТипИнспекции == 3) > 0;
            return естьПолеваяИнспекция && естьИнспекцияПартии && естьПослеуборочнаяИнспекция && (Модель.Статус <= 1);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        var з = управляющийЗаявками.ПолучитьЗаявку(Ид);
        ИдВладельца = з.УчастокПоля.Поле.ПроизводительСемян.ИдВладельца;

        Проектор.ОтобразитьЗаявку(з, Модель);

        ИнспекцииЗаявки = управляющийИнспекциями.ПолучитьИнспекцииЗаявки(Ид);
        await base.OnParametersSetAsync();
    }

    void ОтправитьНаСертификацию()
    {
        управляющийЗаявками.ОтправитьНаСертификацию(Ид);
        управляющийНавигацией.NavigateTo($"/requests/1");
    }
}
