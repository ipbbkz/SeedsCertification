@page "/requests/{Ид:int}/summary"
@attribute [Authorize(Policy = "ИнспекторыИлиФермеры")]

@using СертификацияСемян.Данные;
@inject УправляющийЗаявками управляющийЗаявками
@inject УправляющийИнспекциями управляющийИнспекциями
@inject IStringLocalizer<Инспекции> Лок
@inject IJSRuntime JSRuntime
@inject NavigationManager менеджерНавигации

@if (МожетПечатать)
{
    <button type="button" class="btn btn-primary d-print-none" @onclick=ПечатьАсинх>Печать</button>
}

<h4>@Лок["Партия"]</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Лок["Год"]</th>
            <th>@Лок["Производитель и номер партии"]</th>
            <th>@Лок["Площадь"]</th>
            <th>@Лок["Класс"]</th>
            <th>@Лок["Сорт"]</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@заявка.ДатаПосадки.Year</td>
            <td>@ПроизводительСемян.НаваниеКомпании (ИИН/БИН: @(ПроизводительСемян.БинИлиИин)) @заявка.Код</td>
            <td>@заявка.ПлощадьПосадки</td>
            <td><КлассСемян Значение="заявка.КлассСемянИд" /></td>
            <td>@заявка.НаваниеСортаСемян</td>
        </tr>
    </tbody>
</table>

<h4>@Лок["Координаты месторасположения"]</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Лок["NE"]</th>
            <th>@Лок["Название производителя"]</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@заявка.КоординатыУчастка</td>
            <td>@ПроизводительСемян.НаваниеКомпании (ИИН/БИН: @(ПроизводительСемян.БинИлиИин)) @заявка.Код</td>
        </tr>
    </tbody>
</table>

<h4>@Лок["Происхождение семенного материала"]</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Лок["Год"]</th>
            <th>@Лок["Производитель и номер партии"]</th>
            <th>@Лок["Страна происхождения"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var запись in историяПроисхождения)
        {
            <tr>
                <td>@запись.ГодВыпуска</td>
                <td>@запись.НазваниеКомпании @запись.Код</td>
                <td>@запись.СтранаПроизводитель</td>
            </tr>
        }
    </tbody>
</table>

<h4>@Лок["Статус инспекций и анализов"]</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Лок["Тип инспекции"]</th>
            <th>@Лок["Статус"]</th>
            <th>@Лок["Даты"]</th>
            <th>@Лок["Метод"]</th>
            <th>@Лок["Размер образца"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var инспекция in ИнспекцииЗаявки)
        {
            var размерОбразца = управляющийИнспекциями.РазмерОбразца(инспекция);
            <tr>
                <td><ТипИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td>OK</td>
                <td>@инспекция.ФактическаяДата?.ToShortDateString()</td>
                <td><МетодИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td>@размерОбразца</td>
            </tr>
        }
    </tbody>
</table>

<h4>@Лок["Результаты"]</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Лок["Дата"]</th>
            <th>@Лок["Инспекция"]</th>
            <th>@Лок["Тип"]</th>
            <th>@Лок["Исходный класс"]</th>
            <th>@Лок["Присвоенный класс после инспекции"]</th>
            <th>@Лок["Основания"]</th>
            <th>@Лок["Результат"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var инспекция in ИнспекцииЗаявки)
        {
            var классСемян = управляющийИнспекциями.РекомендованныйКлассСемян(инспекция, (СертификацияСемян.КлассСемян)заявка.КлассСемянИд);
            var rowSpan = инспекция.ТипИнспекции == 3 ? (int?)10 : null;
            <tr>
                <td rowspan=@rowSpan>@инспекция.ФактическаяДата?.ToShortDateString()</td>
                <td rowspan=@rowSpan><ТипИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td rowspan=@rowSpan><МетодИнспекции Значение="инспекция.ТипИнспекции" /></td>
                <td rowspan=@rowSpan><КлассСемян Значение="заявка.КлассСемянИд" /></td>
                <td rowspan=@rowSpan><КлассСемян Значение="@((int)классСемян)" /></td>
                <td>                    
                    @if (инспекция.ТипИнспекции == 3)
                    {
                        <text>@Лок["Метод"]</text>
                    }
                </td>
                <td>
                    @if (инспекция.ТипИнспекции == 3)
                    {
                        <text>@Глобальные.МетодИнспекцииИнспекции_ПЦР</text>
                    }
                </td>
            </tr>
            @if (инспекция.ТипИнспекции == 3)
            {
                var размерОбразца = управляющийИнспекциями.РазмерОбразца(инспекция);
                var анализы = управляющийИнспекциями.ПолучитьАнализы(инспекция.Ид);
                foreach (var анализ in анализы)
                {
                    <tr>
                        <td>@Лок["Размер образца"]</td>
                        <td>
                            @анализ.КоличествоОбразцов
                        </td>
                    </tr>
                    @Замеры(("PVS", анализ.PLRV, 4))
                    @Замеры(("PVA", анализ.PVA, 4))
                    @Замеры(("PVM", анализ.PVM, 4))
                    @Замеры(("PVX", анализ.PVX, 4))
                    @Замеры(("PVY", анализ.PVY, 4))
                    @Замеры(("PVS", анализ.PVS, 4))
                    @Замеры(("Clavibacter", анализ.Clavibacter, 2))
                    @Замеры(("Ralstonia", анализ.Ralstonia, 2))
                }
            }
        }
    </tbody>
</table>

@code {
    private Заявка заявка = new();
    private List<МодельСертификатаПроисхождения> историяПроисхождения = new();

    private ПроизводительСемян ПроизводительСемян => заявка?.УчастокПоля?.Поле?.ПроизводительСемян ?? new();
    public IList<Инспекция> ИнспекцииЗаявки { get; set; } = Array.Empty<Инспекция>();

    [CascadingParameter]
    private Task<AuthenticationState> состояниеАвторизации { get; set; } = null!;

    [Parameter]
    public int Ид { get; set; }

    private bool МожетПечатать = false;

    RenderFragment<(string Название, int? Значение, int Количество)> Замеры = (значение) => __builder =>
    {
        <tr>
            <td>@значение.Название</td>
            <td>
                @for (var i = 0; i < значение.Количество; i++)
                {
                    var позитивныйЗамер = ((значение.Значение ?? 0) & (1 << i)) != 0;
                    if (позитивныйЗамер)
                    {
                        <text>+</text>
                    }
                }
            </td>
        </tr>
    };

    protected override async Task OnParametersSetAsync()
    {
        заявка = управляющийЗаявками.ПолучитьЗаявку(Ид) ?? new();
        историяПроисхождения = управляющийЗаявками.ПолучитьИсториюПроисхождения(Ид);
        ИнспекцииЗаявки = управляющийИнспекциями.ПолучитьИнспекцииЗаявки(Ид);
        МожетПечатать = (await состояниеАвторизации).User.Identity?.IsAuthenticated ?? false;
    }

    protected async Task ПечатьАсинх()
    {
        await JSRuntime.InvokeVoidAsync("print");
    }
}
