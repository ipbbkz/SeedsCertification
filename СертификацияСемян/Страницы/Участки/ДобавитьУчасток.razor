@page "/farms/{Ид:int}/fields/{ИдПоля:int}/patches/add"
@inject УправляющийХозяйствами управляющийХозяйствами
@inject NavigationManager управляющийНавигацией
@inject IStringLocalizer<Глобальные> ГлобЛок
@inject IStringLocalizer<ДобавитьУчасток> Лок
@attribute [Authorize(Policy = "Фермеры")]

<PageTitle>@Лок["ДобавитьУчасток"]</PageTitle>

<h3>@Лок["ДобавитьУчасток"]</h3>

<EditForm Model="@Модель" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <ДанныеУчастка Модель=@Модель />

    <button type="submit" class="btn btn-primary">@ГлобЛок["Сохранить"]</button>
    <a href="/farms/@Ид/fields/@ИдПоля/patches" class="btn btn-secondary">@ГлобЛок["Назад"]</a>
</EditForm>
@code {
    [Parameter]
    public int Ид { get; set; }

    [Parameter]
    public int ИдПоля { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? состояниеАвторизации { get; set; }

    public УчастокПоля? Модель { get; set; }

    protected override void OnInitialized() => Модель ??= new();

    private async Task Submit()
    {
        var идЛичности = await состояниеАвторизации.ПолучитьИдентификаторБезопасности();
        if (идЛичности is null)
        {
            return;
        }

        управляющийХозяйствами.ДобавитьУчасток(
            ИдПоля,
            Модель.Название,
            Модель.КоординатыУчастка);
        управляющийНавигацией.NavigateTo($"/farms/{Ид}/fields/{ИдПоля}/patches");
    }

}
