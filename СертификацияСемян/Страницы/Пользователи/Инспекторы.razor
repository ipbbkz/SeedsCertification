@page "/inspectors"
@attribute [Authorize(Policy = "ТребуетсяБытьАдминистратором")]
@using Microsoft.AspNetCore.Identity
@using СертификацияСемян.Данные;
@inject UserManager<ПользовательПриложения> МенеджерПользователей
@inject IStringLocalizer<Инспекторы> Лок

<PageTitle>@Лок["Инспекторы"]</PageTitle>
<div class="align-items-center d-flex justify-content-between mb-2">
    <div>
        <h4 class="text-start text-primary">@Лок["Инспекторы"]</h4>
    </div>
    <div class="text-end">
        <a href="/inspectors/add" class="btn btn-primary">+</a>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <td>@Лок["Почта"]</td>
            <td>@Лок["Фамилия"]</td>
            <td>@Лок["Имя"]</td>
            <td>@Лок["Отчество"]</td>
            <td>@Лок["ПочтаПодтверждена"]</td>
            <td>@Глобальные.Действия</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var и in инспекторы)
        {
            <tr>
                <td>
                    @и.Email
                </td>
                <td>
                    @и.Фамилия
                </td>
                <td>
                    @и.Имя
                </td>
                <td>
                    @и.Отчество
                </td>
                <td>
                    @и.EmailConfirmed
                </td>
                <td>
                    <a href="/inspectors/edit/@и.Id" class="btn btn-primary">@Глобальные.Редактировать</a>
                    @if (!и.EmailConfirmed)
                    {
                        <a class="btn btn-secondary" @onclick=@(() => this.ОдобритьПользователя(и.Id))>@Глобальные.Одобрить</a>
                    }
                    <AuthorizeView Policy="ТребуетсяБытьСуперАдминистратором">
                        <a href="/inspectors/delete/@и.Id" class="btn btn-danger">@Глобальные.Удалить</a>
                    </AuthorizeView>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IList<ПользовательПриложения> инспекторы = Array.Empty<ПользовательПриложения>();

    protected override async Task OnParametersSetAsync()
    {
        инспекторы = await МенеджерПользователей.GetUsersInRoleAsync(Константы.РольИнспектора);
        await base.OnParametersSetAsync();
    }

    public async Task ОдобритьПользователя(string userId)
    {
        var пользователь = await МенеджерПользователей.FindByIdAsync(userId);
        if (пользователь == null)
        {
            return;
        }

        var жетон = await МенеджерПользователей.GenerateEmailConfirmationTokenAsync(пользователь);
        await МенеджерПользователей.ConfirmEmailAsync(пользователь, жетон);
    }
}
